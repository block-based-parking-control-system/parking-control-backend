version: "3"

services:
  mysql:
    image: mysql:8.3.0
    container_name: mysql-for-develop
    restart: always
    ports:
      - "3308:3306"
    volumes:
      - ./volume/mysql-for-develop:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - TZ=Asia/Seoul
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

# version: docker compose 파일 규격 버전. 3 이라고만 쓰여 있으면 3 버전 중 최신 버전 사용. 로컬의 도커 엔진 버전에 의존
# services: 실행하고자 하는 컨테이너들을 정의
# mysql: 서비스 이름
# image: 해당 서비스를 위해 사용할 이미지 파일
# container_name: 이미지 파일로 인해 생성되는 컨테이너의 이름
# restart: 재시작 정책을 결정 - always: 컨테이너 실행이 중지되면 항상 재시작
# ports: 접근 포트 설정 - 컨테이너 외부(로컬 등):컨테이너 내부, mysql 의 경우 컨테이너 내부는 무조건 3306
# volumes: 로컬의 특정 디렉터리를 도커 컨테이너 작업 공간의 특정 위치에 마운트 - 로컬 디렉터리:컨테이너 디렉터리
# environment: 컨테이너의 환경 변수 설정 (mysql 의 경우: 비밀번호, 사용자 이름 등)
# command : CLI 상의 명령어와 동일